vulnerabilities:
# OWASP Top 10 2021 漏洞类型
- name: A01:2021-访问控制失效
  harm: 可能导致未授权访问敏感数据或功能，造成数据泄露、权限提升等严重后果
  description: 访问控制失效是指应用程序未能正确实施访问控制策略，导致攻击者可以绕过身份验证或授权机制，访问本应受保护的功能或数据。常见场景包括水平权限绕过、垂直权限绕过、直接对象引用等。
  risklevel: 高危
  suggustion: |
    1、实施最小权限原则，确保用户只能访问其职责范围内的资源；
    2、对所有敏感功能实施严格的访问控制检查；
    3、使用基于角色的访问控制（RBAC）模型；
    4、定期审查和测试访问控制机制；
    5、实施多因素认证（MFA）增强安全性。

- name: A02:2021-加密失败
  harm: 可能导致敏感数据泄露、数据完整性破坏、身份伪造等安全风险
  description: 加密失败是指应用程序在传输或存储敏感数据时使用了弱加密算法、不当的密钥管理或错误的加密实现，导致数据容易被攻击者破解或窃取。
  risklevel: 高危
  suggustion: |
    1、使用强加密算法（如AES-256、RSA-2048等）；
    2、实施安全的密钥管理策略；
    3、使用HTTPS传输敏感数据；
    4、对存储的密码使用加盐哈希；
    5、定期更新加密算法和密钥。

- name: A03:2021-注入漏洞
  harm: 可能导致数据泄露、数据篡改、系统被控制等严重后果
  description: 注入漏洞是指应用程序未对用户输入进行充分验证和过滤，导致恶意代码被注入到系统中执行。包括SQL注入、NoSQL注入、LDAP注入、OS命令注入等。
  risklevel: 高危
  suggustion: |
    1、使用参数化查询或预编译语句；
    2、对所有用户输入进行严格验证和过滤；
    3、实施最小权限原则；
    4、使用Web应用防火墙（WAF）；
    5、定期进行安全代码审计。

- name: A04:2021-不安全设计
  harm: 可能导致系统架构层面的安全缺陷，影响整体安全性
  description: 不安全设计是指应用程序在设计和架构阶段就存在安全缺陷，缺乏威胁建模和安全控制措施，导致系统容易受到攻击。
  risklevel: 高危
  suggustion: |
    1、在系统设计阶段进行威胁建模；
    2、实施安全开发生命周期（SDL）；
    3、采用安全的设计模式；
    4、实施深度防御策略；
    5、定期进行安全架构审查。

- name: A05:2021-安全配置错误
  harm: 可能导致系统暴露敏感信息、功能被滥用等安全风险
  description: 安全配置错误是指应用程序、框架、库、容器等组件使用了不安全的默认配置，或者配置不当，导致系统存在安全漏洞。
  risklevel: 中危
  suggustion: |
    1、使用安全的默认配置；
    2、定期审查和更新配置；
    3、禁用不必要的服务和功能；
    4、实施配置管理策略；
    5、使用自动化配置检查工具。

- name: A06:2021-使用有漏洞和过时的组件
  harm: 可能导致已知漏洞被利用，造成系统被攻击
  description: 使用有漏洞和过时的组件是指应用程序使用了包含已知安全漏洞的第三方组件、库、框架等，且未及时更新到安全版本。
  risklevel: 中危
  suggustion: |
    1、建立组件清单管理；
    2、定期扫描和更新组件；
    3、订阅安全公告和漏洞信息；
    4、实施漏洞管理流程；
    5、使用自动化依赖检查工具。

- name: A07:2021-身份认证失败
  harm: 可能导致未授权访问、账户劫持、会话固定等安全风险
  description: 身份认证失败是指应用程序的身份认证机制存在缺陷，如弱密码策略、会话管理不当、多因素认证缺失等，导致攻击者可以绕过认证或劫持用户账户。
  risklevel: 高危
  suggustion: |
    1、实施强密码策略；
    2、使用多因素认证（MFA）；
    3、实施安全的会话管理；
    4、防止暴力破解攻击；
    5、定期审查认证机制。

- name: A08:2021-软件和数据完整性失败
  harm: 可能导致恶意代码执行、数据篡改、供应链攻击等严重后果
  description: 软件和数据完整性失败是指应用程序缺乏对软件更新、关键数据或CI/CD管道的完整性验证，导致恶意代码或数据被注入到系统中。
  risklevel: 高危
  suggustion: |
    1、实施代码签名和验证；
    2、使用安全的CI/CD管道；
    3、实施数据完整性检查；
    4、使用安全的更新机制；
    5、定期进行完整性审计。

- name: A09:2021-安全日志和监控失败
  harm: 可能导致安全事件无法及时发现和响应，影响安全运营效果
  description: 安全日志和监控失败是指应用程序缺乏有效的日志记录、监控和告警机制，导致安全事件无法及时发现、分析和响应。
  risklevel: 中危
  suggustion: |
    1、实施全面的日志记录策略；
    2、建立安全监控和告警系统；
    3、实施日志分析和关联分析；
    4、建立事件响应流程；
    5、定期进行安全运营演练。

- name: A10:2021-服务器端请求伪造
  harm: 可能导致内网扫描、内网服务攻击、数据泄露等安全风险
  description: 服务器端请求伪造（SSRF）是指应用程序未对用户提供的URL进行充分验证，导致攻击者可以诱使服务器向任意地址发起请求，包括内网地址。
  risklevel: 高危
  suggustion: |
    1、验证和过滤用户提供的URL；
    2、使用白名单限制允许的地址；
    3、禁用不必要的网络协议；
    4、实施网络隔离；
    5、使用代理服务器过滤请求。

# 常见Web安全漏洞
- name: SQL注入
  harm: 可能导致数据库信息泄露、数据篡改、服务器被控制等严重后果
  description: 攻击者通过在应用程序的输入字段中插入恶意SQL代码，当应用程序未正确过滤用户输入时，这些代码会被数据库执行，从而绕过认证或获取敏感数据。常见于登录页面、搜索功能、数据展示等场景。
  risklevel: 高危
  suggustion: |
    1、使用参数化查询或预编译语句（PreparedStatement）；
    2、对所有用户输入进行严格验证和过滤；
    3、实施最小权限原则，限制数据库用户权限；
    4、使用Web应用防火墙（WAF）进行防护；
    5、定期进行SQL注入漏洞扫描和测试。

- name: 跨站脚本攻击(XSS)
  harm: 可能导致用户会话劫持、钓鱼攻击、恶意脚本执行、敏感信息泄露等安全风险
  description: 攻击者将恶意JavaScript代码注入到网页中，当其他用户访问该页面时，脚本会在他们的浏览器中执行，可以窃取cookie、会话令牌或进行其他恶意操作。分为存储型XSS、反射型XSS和DOM型XSS。
  risklevel: 高危
  suggustion: |
    1、对所有用户输入进行HTML编码和过滤；
    2、使用内容安全策略（CSP）限制脚本执行；
    3、实施输入验证和输出编码；
    4、使用HttpOnly标志保护cookie；
    5、定期进行XSS漏洞扫描和测试。

- name: 跨站请求伪造(CSRF)
  harm: 可能导致用户在不知情的情况下执行非预期的操作，如修改密码、转账、删除数据等
  description: 攻击者诱使用户在已认证的网站上执行非预期的请求，利用用户已建立的会话凭证，如强制用户更改密码、转账或执行其他敏感操作。
  risklevel: 中危
  suggustion: |
    1、使用CSRF令牌验证请求来源；
    2、检查Referer头信息；
    3、实施同源策略检查；
    4、使用双重提交cookie模式；
    5、对敏感操作要求重新认证。

- name: 文件上传漏洞
  harm: 可能导致恶意文件上传、服务器被控制、恶意代码执行等严重后果
  description: 应用程序允许用户上传文件，但未对上传的文件类型、大小、内容进行充分验证，导致攻击者可以上传恶意文件（如Webshell、病毒等）到服务器。
  risklevel: 高危
  suggustion: |
    1、严格限制允许上传的文件类型；
    2、检查文件内容而不仅仅是文件扩展名；
    3、限制上传文件的大小；
    4、将上传文件存储在Web根目录外；
    5、对上传文件进行病毒扫描。

- name: 文件包含漏洞
  harm: 可能导致敏感文件泄露、恶意代码执行、服务器被控制等严重后果
  description: 应用程序使用用户可控的参数来包含文件，但未对参数进行充分验证，导致攻击者可以包含任意文件，包括系统敏感文件或恶意文件。
  risklevel: 高危
  suggustion: |
    1、避免使用用户输入作为文件包含路径；
    2、使用白名单限制允许包含的文件；
    3、对包含路径进行严格验证；
    4、使用绝对路径而非相对路径；
    5、实施文件访问权限控制。

- name: 命令注入漏洞
  harm: 可能导致服务器被完全控制、敏感信息泄露、系统被破坏等严重后果
  description: 应用程序将用户输入直接传递给系统命令执行，但未对输入进行充分验证和过滤，导致攻击者可以执行任意系统命令。
  risklevel: 高危
  suggustion: |
    1、避免直接执行用户输入的命令；
    2、使用参数化命令或API替代命令执行；
    3、对用户输入进行严格验证和过滤；
    4、实施最小权限原则；
    5、使用沙箱环境隔离命令执行。

- name: 信息泄露漏洞
  harm: 可能导致敏感信息泄露、系统信息暴露、攻击面扩大等安全风险
  description: 应用程序意外泄露敏感信息，如错误信息、调试信息、配置文件、数据库信息等，这些信息可能被攻击者利用来进一步攻击系统。
  risklevel: 中危
  suggustion: |
    1、实施统一的错误处理机制；
    2、在生产环境中禁用调试模式；
    3、限制错误信息的详细程度；
    4、定期审查日志和配置文件；
    5、实施信息分类和访问控制。

- name: 逻辑漏洞
  harm: 可能导致业务逻辑被绕过、未授权操作、数据篡改等安全风险
  description: 应用程序的业务逻辑存在缺陷，如条件判断错误、状态检查不完整、流程控制缺陷等，导致攻击者可以绕过正常的业务逻辑执行未授权操作。
  risklevel: 中危
  suggustion: |
    1、进行全面的业务逻辑安全测试；
    2、实施多层验证和检查；
    3、使用状态机管理业务流程；
    4、定期进行代码审查；
    5、建立业务逻辑安全规范。

- name: 服务器端请求伪造(SSRF)
  harm: 可能导致内网扫描、内网服务攻击、数据泄露、服务器被控制等严重后果
  description: 应用程序未对用户提供的URL进行充分验证，导致攻击者可以诱使服务器向任意地址发起请求，包括内网地址、云服务元数据接口等。
  risklevel: 高危
  suggustion: |
    1、验证和过滤用户提供的URL；
    2、使用白名单限制允许的地址和协议；
    3、禁用不必要的网络协议（如file://、gopher://等）；
    4、实施网络隔离和访问控制；
    5、使用代理服务器过滤和验证请求。

- name: XML外部实体注入(XXE)
  harm: 可能导致敏感文件读取、服务器端请求伪造、拒绝服务攻击等安全风险
  description: 应用程序解析XML时未禁用外部实体引用，导致攻击者可以通过XML外部实体注入读取服务器上的敏感文件或发起SSRF攻击。
  risklevel: 高危
  suggustion: |
    1、禁用XML外部实体解析；
    2、使用安全的XML解析器配置；
    3、验证和过滤XML输入；
    4、使用JSON等替代格式；
    5、实施XML解析安全策略。

- name: 不安全的反序列化
  harm: 可能导致远程代码执行、权限提升、数据篡改等严重后果
  description: 应用程序对用户提供的数据进行不安全的反序列化操作，导致攻击者可以通过构造恶意序列化数据来执行任意代码或篡改数据。
  risklevel: 高危
  suggustion: |
    1、避免反序列化用户提供的数据；
    2、使用安全的序列化格式（如JSON）；
    3、实施反序列化白名单机制；
    4、使用数字签名验证序列化数据；
    5、在沙箱环境中进行反序列化。

- name: 会话固定攻击
  harm: 可能导致会话劫持、未授权访问等安全风险
  description: 应用程序在用户认证后未重新生成会话ID，导致攻击者可以预先设置会话ID，然后在用户认证后获得该会话的控制权。
  risklevel: 中危
  suggustion: |
    1、在用户认证后重新生成会话ID；
    2、使用安全的会话管理机制；
    3、实施会话超时和失效机制；
    4、使用HTTPS传输会话信息；
    5、定期轮换会话密钥。

- name: 点击劫持攻击
  harm: 可能导致用户在不知情的情况下执行敏感操作
  description: 攻击者使用透明的iframe覆盖在正常网页上，诱使用户点击看似无害的元素，实际上点击的是隐藏的敏感功能按钮。
  risklevel: 中危
  suggustion: |
    1、使用X-Frame-Options头防止页面被嵌入iframe；
    2、实施内容安全策略（CSP）的frame-ancestors指令；
    3、使用JavaScript检测页面是否被嵌入；
    4、对敏感操作要求用户确认；
    5、实施反点击劫持机制。

- name: 目录遍历漏洞
  harm: 可能导致敏感文件泄露、系统信息暴露等安全风险
  description: 应用程序使用用户输入来构建文件路径，但未对路径进行充分验证，导致攻击者可以使用../等路径遍历字符访问系统上的任意文件。
  risklevel: 中危
  suggustion: |
    1、对文件路径进行严格验证和过滤；
    2、使用白名单限制允许访问的文件；
    3、使用绝对路径而非相对路径；
    4、实施文件访问权限控制；
    5、使用安全的文件服务机制。

- name: 弱认证机制
  harm: 可能导致未授权访问、账户被破解等安全风险
  description: 应用程序使用弱密码策略、简单的认证机制或缺乏多因素认证，导致攻击者可以轻易破解用户账户或绕过认证。
  risklevel: 中危
  suggustion: |
    1、实施强密码策略（长度、复杂度要求）；
    2、使用多因素认证（MFA）；
    3、实施账户锁定机制；
    4、使用安全的密码哈希算法；
    5、定期进行密码安全审计。

- name: 不安全的直接对象引用
  harm: 可能导致未授权访问敏感数据、权限绕过等安全风险
  description: 应用程序直接使用用户提供的参数来访问数据库记录、文件或其他资源，但未验证用户是否有权限访问该资源。
  risklevel: 中危
  suggustion: |
    1、实施访问控制检查；
    2、使用间接引用（如映射表）替代直接引用；
    3、验证用户权限；
    4、实施资源访问审计；
    5、使用安全的API设计模式。

- name: 安全配置错误
  harm: 可能导致系统暴露敏感信息、功能被滥用等安全风险
  description: 应用程序、服务器或框架使用了不安全的默认配置，如暴露调试信息、使用默认密码、启用不必要的服务等。
  risklevel: 中危
  suggustion: |
    1、使用安全的默认配置；
    2、定期审查和更新配置；
    3、禁用不必要的服务和功能；
    4、实施配置管理策略；
    5、使用自动化配置检查工具。

- name: 敏感数据暴露
  harm: 可能导致敏感信息泄露、隐私侵犯、合规风险等严重后果
  description: 应用程序在传输或存储过程中暴露了敏感数据，如密码、信用卡号、个人信息等，且未进行适当的加密或保护。
  risklevel: 高危
  suggustion: |
    1、对敏感数据进行加密存储和传输；
    2、使用强加密算法和密钥管理；
    3、实施数据分类和访问控制；
    4、定期进行数据安全审计；
    5、遵循相关数据保护法规。

- name: 组件漏洞
  harm: 可能导致已知漏洞被利用、系统被攻击等安全风险
  description: 应用程序使用了包含已知安全漏洞的第三方组件、库、框架等，且未及时更新到安全版本。
  risklevel: 中危
  suggustion: |
    1、建立组件清单管理；
    2、定期扫描和更新组件；
    3、订阅安全公告和漏洞信息；
    4、实施漏洞管理流程；
    5、使用自动化依赖检查工具。

- name: 日志记录和监控不足
  harm: 可能导致安全事件无法及时发现和响应、影响安全运营效果
  description: 应用程序缺乏有效的日志记录、监控和告警机制，导致安全事件无法及时发现、分析和响应。
  risklevel: 中危
  suggustion: |
    1、实施全面的日志记录策略；
    2、建立安全监控和告警系统；
    3、实施日志分析和关联分析；
    4、建立事件响应流程；
    5、定期进行安全运营演练。